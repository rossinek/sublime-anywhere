#!/bin/bash
#
# sublime-anywhere - use Sublime whenever, wherever
# Author: Artur Rosa
# Homepage: https://www.github.com/rossinek/sublime-anywhere
# Strongly inspired by cknadler/vim-anywhere
#
# Open a temporary file with Sublime. Once Sublime is closed, copy the contents of that
# file to the system clipboard.

###
# defs
###

err() { echo -e "$@" 1>&2; }

require_file_exists() {
  if [ ! -e $1 ]; then
    err "$1 does not exist. ${@:2}"
    exit 1
  fi
}

###
# opts
###

while getopts ":v" opt; do
  case "$opt" in
    v) set -x ;;
    \?) echo "Invalid option: -$OPTARG" >&2 ;;
  esac
done

###
# run
###

SAH_PATH=$HOME/.sublime-anywhere
TMPFILE_DIR=/tmp/sublime-anywhere
TMPFILE=$TMPFILE_DIR/doc-$(date +"%y%m%d%H%M%S")

SUBLIME_OPTS="--new-window --wait"

mkdir -p $TMPFILE_DIR
touch $TMPFILE

# OSX
if [[ $OSTYPE == "darwin"* ]]; then
  # if there is no path file, it must have been deleted or the installer failed
  require_file_exists $SAH_PATH/.path "Please reinstall sublime-anywhere."

  app=$(osascript $SAH_PATH/script/current_app.scpt)
  sublime_path=$(cat $SAH_PATH/.path)

  require_file_exists $sublime_path \
    "sublime must have been moved or uninstalled.\nPlease make sure it is" \
    "available in your path and then reinstall sublime-anywhere."

  # check if text is highlighted
  CLIPBOARD_BEFORE=""
  echo "$CLIPBOARD_BEFORE" | pbcopy
  osascript -e "tell application \"System Events\" to keystroke \"c\" using command down"
  sleep 0.5
  CLIPBOARD_AFTER=$(LANG=en_US.UTF-8 pbpaste)
  if [[ "$CLIPBOARD_BEFORE" != "$CLIPBOARD_AFTER" ]]; then
    echo "$CLIPBOARD_AFTER" > $TMPFILE
  fi
  TMPFILE_STATS_INIT=$(stat -f "%Sm" $TMPFILE)

  # open temporary file with sublime
  $sublime_path $SUBLIME_OPTS $TMPFILE

  # NOTE
  # Here we set LANG explicitly to be UTF-8 compatible when copying text. The only way that was explicitly
  # setting this to en_US.UTF-8. This may eventually cause issues with other languages. If so, just remove
  # the LANG setting.
  osascript -e "activate application \"$app\""
  if [[ $(stat -f "%Sm" $TMPFILE) != $TMPFILE_STATS_INIT ]]; then
    sleep 0.2
    LANG=en_US.UTF-8 pbcopy < $TMPFILE
    osascript -e "tell application \"System Events\" to keystroke \"v\" using command down"
  fi
fi
